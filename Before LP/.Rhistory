treat_idx <-which(data$treatment == 1)
cont_idx <-which(data$treatment == 0)
colnames(data)
data %>% filter(cell==1 &cell==4)
library(dplyr)
data <- read.csv('C:\\Users\\Sandeep Kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\collage_treatment_effect.csv')
data %>% filter(cell==1 &cell==4)
data
View(data)
data <- read.csv('C:\\Users\\Sandeep Kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\collage_treatment_effect.csv')
data <- data %>% filter(cell==1 &cell==4)
data <- read.csv('C:\\Users\\Sandeep Kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\collage_treatment_effect.csv')
data <- data %>% filter(cell=='1' &cell=='4')
data <- read.csv('C:\\Users\\Sandeep Kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\collage_treatment_effect.csv')
summary(data$cell)
data <- read.csv('C:\\Users\\Sandeep Kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\collage_treatment_effect.csv')
data <- data %>% filter(cell=1 &cell=4)
data <- data %>% filter(cell==1)
View(data)
data <- read.csv('C:\\Users\\Sandeep Kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\collage_treatment_effect.csv')
data <- data %>% filter(cell==1 & cell=4)
data <- read.csv('C:\\Users\\Sandeep Kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\collage_treatment_effect.csv')
data <- data %>% filter(cell==1 & cell==4)
suppressPackageStartupMessages({
library(ggplot2)
library(caret)
library(rattle)
library(rpart)
})
data <- data %>% filter(cell==1 | cell==4)
data <- read.csv('C:\\Users\\Sandeep Kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\collage_treatment_effect.csv')
data <- data %>% filter(cell==1 | cell==4)
View(data)
data <- read.csv('C:\\Users\\Sandeep Kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\collage_treatment_effect.csv')
data <- data %>% filter(cell==1 | cell==4) %>% mutate(cell=ifelse(cell==1,0,1))
row.names(data)
data <- data %>% filter(cell==1 | cell==4) %>%
mutate(cell=ifelse(cell==1,0,1))%>%
mutate(row = rownames())
data <- data %>% filter(cell==1 | cell==4) %>%
mutate(cell=ifelse(cell==1,0,1))%>%
mutate(row = rownames(data))
View(alt_nr_output)
data <- data %>% filter(cell==1 | cell==4) %>%
mutate(cell=ifelse(cell==1,0,1))%>% mutate(row=row.names())
data <- data %>% filter(cell==1 | cell==4) %>%
mutate(cell=ifelse(cell==1,0,1))%>% mutate(row=row.names(data))
data <- read.csv('C:\\Users\\Sandeep Kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\collage_treatment_effect.csv')
data <- data %>% filter(cell==1 | cell==4) %>%
mutate(cell=ifelse(cell==1,0,1))
data[row]<- row.names(data)
data['row']<- row.names(data)
View(data)
data <- data %>% mutate(split=ifelse(row%3==0,'test',ifelse(row%3==1,'train','est')))
?seq
idx<- seq(1:3)
idx
?rep
idx<- row.names(data)%3
idx<- row.names(data) % 3
idx<- row.names(data)/3
idx<- as.numeric(row.names(data))%3
idx<- as.numeric(row.names(data))/3
idx
idx<- round(as.numeric(row.names(data))%% 3
idx<- as.numeric(row.names(data))%% 3
idx<- as.numeric(row.names(data))%% 3
idx
data$split
data['split']<- as.numeric(row.names(data))%% 3
data$split
data['split']<- sample(as.numeric(row.names(data))%% 3)
data$split
View(data)
cov_cols = colnames(train_data)[!(colnames(train_data) %in% c(outcome_var, treatment_var))]
data <- data %>% filter(cell==1 | cell==4) %>%
mutate(cell=ifelse(cell==1,0,1))
data['split']<- sample(as.numeric(row.names(data))%% 3)
est_data <- data %>% filter(split == 0)
train_data <- data %>% filter(split == 1)
test_data <- data %>% filter(split == 2)
treatment_var = "cell"
outcome_var = "number_referrals"
cov_cols = colnames(train_data)[!(colnames(train_data) %in% c(outcome_var, treatment_var))]
f = sprintf("%s ~ %s",outcome_var,paste(cov_cols,collapse = ' + '))
f
library(dplyr)
data <- read.csv('C:\\Users\\Sandeep Kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\collage_treatment_effect.csv')
data <- data %>% filter(cell==1 | cell==4) %>%
mutate(cell=ifelse(cell==1,0,1))
data['split']<- sample(as.numeric(row.names(data))%% 3)
est_data <- data %>% filter(split == 0)
train_data <- data %>% filter(split == 1)
test_data <- data %>% filter(split == 2)
treatment_var = "cell"
outcome_var = "number_referrals"
cov_cols = colnames(train_data)[!(colnames(train_data) %in% c(outcome_var, treatment_var, 'con_rate', 'split'))]
f = sprintf("%s ~ %s",outcome_var,paste(cov_cols,collapse = ' + '))
f
source('findit.R')
source('findit.R')
setwd('C:\\Users\\Sandeep Kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\git_code\\hte')
source('findit.R')
tree <- honest.causalTree(as.formula(f),
data = train_data,treatment = train_data[[treatment_var]],
est_data = est_data, est_treatment = est_data[[treatment_var]],
split.Rule = "CT", split.Honest = T, cv.option="CT",
cv.Honest=T, HonestSampleSize = nrow(est_data))
tree_cp <- tree$cptable[,1][which.min(tree$cptable[,4])]
pruned_tree <- prune(tree, tree_cp)
leaf_results <- get_leaf_results(test_data, pruned_tree, treatment_var, outcome_var)
setwd('C:\\Users\\Sandeep Kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\git_code\\hte')
source('athey_function.R')
setwd('C:\\Users\\Sandeep Kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\git_code\\hte')
source('athey_function.R')
collage_data <- read.csv('C:\\Users\\Sandeep Kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\collage_treatment_effect.csv')
control_placeholder <- 1
egoistic_placeholder <- 2
equitable_placeholder <- 3
altruistic_placeholder <- 4
alt_nr_output <- athey(
data = collage_data,
control_group_placeholder = control_placeholder,
treatment_group_placeholder = altruistic_placeholder,
treatment_variable = "cell",
target_variable = "number_referrals",
covariates = c("satisfied","NPS","lastday_purchase_all","num_purchase_all","money_spend_all","survey"),
covariate_factors = c("satisfied","survey"))
alt_nr_output <- athey(
data = collage_data,
control_group_placeholder = control_placeholder,
treatment_group_placeholder = altruistic_placeholder,
treatment_variable = "cell",
target_variable = "number_referrals",
covariates = c("satisfied","NPS","lastday_purchase_all","num_purchase_all","money_spend_all","survey"),
covariate_factors = c("satisfied","survey"))
library(knitr)
kable(alt_nr_output)
alt_con_output <- athey(
data = collage_data,
control_group_placeholder = control_placeholder,
treatment_group_placeholder = altruistic_placeholder,
treatment_variable = "cell",
target_variable = "con_rate",
covariates = c("satisfied","NPS","lastday_purchase_all","num_purchase_all","money_spend_all","survey"),
covariate_factors = c("satisfied","survey"))
View(collage_data)
setwd('C:\\Users\\Sandeep kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\git_code\\hte')
source('findit.R')
source('supplementary_functions.R')
library(causalTree)
library(randomForestCI)
library(dplyr)
data <- read.csv('C:\\Users\\Sandeep kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\collage_treatment_effect.csv')
data <- data %>% filter(cell==1 | cell==4) %>%
mutate(cell=ifelse(cell==1,0,1))
control_data <- data %>% filter(cell==0)
treatment_data <- data %>% filter(cell==1)
control_data['split']<- sample(as.numeric(row.names(control_data))%% 3)
treatment_data['split']<- sample(as.numeric(row.names(treatment_data))%% 3)
est_data <- rbind(control_data %>% filter(split == 1), treatment_data %>% filter(split == 1))
train_data <- rbind(control_data %>% filter(split == 0), treatment_data %>% filter(split == 0))
test_data <- rbind(control_data %>% filter(split == 2), treatment_data %>% filter(split == 2))
treatment_var = "cell"
outcome_var = "con_rate"
cov_cols = colnames(train_data)[!(colnames(train_data) %in% c(outcome_var, treatment_var, 'con_rate', 'split'))]
f = sprintf("%s ~ %s",outcome_var,paste(cov_cols,collapse = ' + '))
f
outcome_var = "con_rate"
cov_cols = colnames(train_data)[!(colnames(train_data) %in% c(outcome_var, treatment_var, 'number_referrals', 'split'))]
f = sprintf("%s ~ %s",outcome_var,paste(cov_cols,collapse = ' + '))
f
tree <- honest.causalTree(as.formula(f),
data = train_data,treatment = train_data[[treatment_var]],
est_data = est_data, est_treatment = est_data[[treatment_var]],
split.Rule = "CT", split.Honest = T, cv.option="CT",
cv.Honest=T, HonestSampleSize = nrow(est_data))
fancyRpartPlot(tree)
tree_cp <- tree$cptable[,1][which.min(tree$cptable[,4])]
pruned_tree <- prune(tree, tree_cp)
tree <- honest.causalTree(as.formula(f),
data = train_data,treatment = train_data[[treatment_var]],
est_data = est_data, est_treatment = est_data[[treatment_var]],
split.Rule = "CT", split.Honest = T, cv.option="CT",
cv.Honest=T, HonestSampleSize = nrow(est_data))
fancyRpartPlot(tree)
tree_cp <- tree$cptable[,1][which.min(tree$cptable[,4])]
pruned_tree <- prune(tree, tree_cp)
source('findit.R')
leaf_results <- get_leaf_results(test_data, pruned_tree, treatment_var, outcome_var)
equi_nr_output <- athey(
data = collage_data,
control_group_placeholder = control_placeholder,
treatment_group_placeholder = equitable_placeholder,
treatment_variable = "cell",
target_variable = "number_referrals",
covariates = c("satisfied","NPS","lastday_purchase_all","num_purchase_all","money_spend_all","survey"),
covariate_factors = c("satisfied","survey"))
kable(equi_nr_output)
kable(ego_con_output)
kable(ego_nr_output)
source('athey_function.R')
equi_nr_output <- athey(
data = collage_data,
control_group_placeholder = control_placeholder,
treatment_group_placeholder = equitable_placeholder,
treatment_variable = "cell",
target_variable = "number_referrals",
covariates = c("satisfied","NPS","lastday_purchase_all","num_purchase_all","money_spend_all","survey"),
covariate_factors = c("satisfied","survey"))
source('athey_function.R')
equi_nr_output <- athey(
data = collage_data,
control_group_placeholder = control_placeholder,
treatment_group_placeholder = equitable_placeholder,
treatment_variable = "cell",
target_variable = "number_referrals",
covariates = c("satisfied","NPS","lastday_purchase_all","num_purchase_all","money_spend_all","survey"),
covariate_factors = c("satisfied","survey"))
kable(equi_nr_output)
kable(ego_nr_output)
ego_nr_output <- athey(
data = collage_data,
control_group_placeholder = control_placeholder,
treatment_group_placeholder = egoistic_placeholder,
treatment_variable = "cell",
target_variable = "number_referrals",
covariates = c("satisfied","NPS","lastday_purchase_all","num_purchase_all","money_spend_all","survey"),
covariate_factors = c("cell","satisfied","survey"))
setwd('C:\\Users\\Sandeep kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\git_code\\hte')
source('findit.R')
source('supplementary_functions.R')
library(causalTree)
library(randomForestCI)
library(dplyr)
data <- read.csv('C:\\Users\\Sandeep kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\collage_treatment_effect.csv')
data <- data %>% filter(cell==1 | cell==2) %>%
mutate(cell=ifelse(cell==1,0,1))
control_data <- data %>% filter(cell==0)
treatment_data <- data %>% filter(cell==1)
control_data['split']<- sample(as.numeric(row.names(control_data))%% 3)
treatment_data['split']<- sample(as.numeric(row.names(treatment_data))%% 3)
est_data <- rbind(control_data %>% filter(split == 1), treatment_data %>% filter(split == 1))
train_data <- rbind(control_data %>% filter(split == 0), treatment_data %>% filter(split == 0))
test_data <- rbind(control_data %>% filter(split == 2), treatment_data %>% filter(split == 2))
treatment_var = "cell"
outcome_var = "con_rate"
cov_cols = colnames(train_data)[!(colnames(train_data) %in% c(outcome_var, treatment_var, 'number_referrals', 'split'))]
f = sprintf("%s ~ %s",outcome_var,paste(cov_cols,collapse = ' + '))
tree <- honest.causalTree(as.formula(f),
data = train_data,treatment = train_data[[treatment_var]],
est_data = est_data, est_treatment = est_data[[treatment_var]],
split.Rule = "CT", split.Honest = T, cv.option="CT",
cv.Honest=T, HonestSampleSize = nrow(est_data))
fancyRpartPlot(tree)
f
train_data <- rbind(control_data %>% filter(split == 0), treatment_data %>% filter(split == 0))
test_data <- rbind(control_data %>% filter(split == 2), treatment_data %>% filter(split == 2))
treatment_var = "cell"
outcome_var = "number_referrals"
cov_cols = colnames(train_data)[!(colnames(train_data) %in% c(outcome_var, treatment_var, 'con_rate', 'split'))]
f = sprintf("%s ~ %s",outcome_var,paste(cov_cols,collapse = ' + '))
f
tree <- honest.causalTree(as.formula(f),
data = train_data,treatment = train_data[[treatment_var]],
est_data = est_data, est_treatment = est_data[[treatment_var]],
split.Rule = "CT", split.Honest = T, cv.option="CT",
cv.Honest=T, HonestSampleSize = nrow(est_data))
fancyRpartPlot(tree)
tree_cp <- tree$cptable[,1][which.min(tree$cptable[,4])]
pruned_tree <- prune(tree, tree_cp)
source('findit.R')
leaf_results <- get_leaf_results(test_data, pruned_tree, treatment_var, outcome_var)
tstat <- honest.causalTree(as.formula(f),
data = train_data,treatment = train_data[[treatment_var]],
est_data = est_data, est_treatment = est_data[[treatment_var]],
split.Rule = "tstats", split.Honest = T,cv.option="CT",
cv.Honest=T, HonestSampleSize = nrow(est_data))
tstatcp <- tstat$cptable[,1][which.min(tstat$cptable[,4])]
tstat_pruned <- prune(tstat, tstatcp)
rpart.plot(tstat_pruned)
leaf_results <- get_leaf_results(est_data, tstat_pruned, treatment_var, outcome_var)
a<- data.frame(leaf_results)
num_train_row <- nrow(train_data)
leaf_results
equi_con_output <- athey(
data = collage_data,
control_group_placeholder = control_placeholder,
treatment_group_placeholder = equitable_placeholder,
treatment_variable = "cell",
target_variable = "con_rate",
covariates = c("satisfied","NPS","lastday_purchase_all","num_purchase_all","money_spend_all","survey"),
covariate_factors = c("cell","satisfied","survey"))
ego_nr_output <- athey(
data = collage_data,
control_group_placeholder = control_placeholder,
treatment_group_placeholder = egoistic_placeholder,
treatment_variable = "cell",
target_variable = "number_referrals",
covariates = c("satisfied","NPS","lastday_purchase_all","num_purchase_all","money_spend_all","survey"),
covariate_factors = c("cell","satisfied","survey"))
setwd('C:\\Users\\Sandeep kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\git_code\\hte')
source('findit.R')
source('supplementary_functions.R')
library(causalTree)
library(randomForestCI)
library(dplyr)
data <- read.csv('C:\\Users\\Sandeep kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\collage_treatment_effect.csv')
data <- data %>% filter(cell==1 | cell==2) %>%
mutate(cell=ifelse(cell==1,0,1))
control_data <- data %>% filter(cell==0)
treatment_data <- data %>% filter(cell==1)
control_data['split']<- sample(as.numeric(row.names(control_data))%% 3)
treatment_data['split']<- sample(as.numeric(row.names(treatment_data))%% 3)
est_data <- rbind(control_data %>% filter(split == 1), treatment_data %>% filter(split == 1))
train_data <- rbind(control_data %>% filter(split == 0), treatment_data %>% filter(split == 0))
test_data <- rbind(control_data %>% filter(split == 2), treatment_data %>% filter(split == 2))
treatment_var = "cell"
outcome_var = "number_referrals"
cov_cols = colnames(train_data)[!(colnames(train_data) %in% c(outcome_var, treatment_var, 'con_rate', 'split'))]
f = sprintf("%s ~ %s",outcome_var,paste(cov_cols,collapse = ' + '))
tree <- honest.causalTree(as.formula(f),
data = train_data,treatment = train_data[[treatment_var]],
est_data = est_data, est_treatment = est_data[[treatment_var]],
split.Rule = "CT", split.Honest = T, cv.option="CT",
cv.Honest=T, HonestSampleSize = nrow(est_data))
fancyRpartPlot(tree)
tree_cp <- tree$cptable[,1][which.min(tree$cptable[,4])]
pruned_tree <- prune(tree, tree_cp)
source('findit.R')
leaf_results <- get_leaf_results(test_data, pruned_tree, treatment_var, outcome_var)
leaf_results <- leaf_results[order(-leaf_results$effect),]
equi_nr_output <- athey(
data = collage_data,
control_group_placeholder = control_placeholder,
treatment_group_placeholder = equitable_placeholder,
treatment_variable = "cell",
target_variable = "number_referrals",
covariates = c("satisfied","NPS","lastday_purchase_all","num_purchase_all","money_spend_all","survey"),
covariate_factors = c("satisfied","survey"))
kable(equi_nr_output)
alt_nr_output <- athey(
data = collage_data,
control_group_placeholder = control_placeholder,
treatment_group_placeholder = altruistic_placeholder,
treatment_variable = "cell",
target_variable = "number_referrals",
covariates = c("satisfied","NPS","lastday_purchase_all","num_purchase_all","money_spend_all","survey"),
covariate_factors = c("satisfied","survey"))
source('athey_function.R')
alt_nr_output <- athey(
data = collage_data,
control_group_placeholder = control_placeholder,
treatment_group_placeholder = altruistic_placeholder,
treatment_variable = "cell",
target_variable = "number_referrals",
covariates = c("satisfied","NPS","lastday_purchase_all","num_purchase_all","money_spend_all","survey"),
covariate_factors = c("satisfied","survey"))
source('athey_function.R')
collage_data <- read.csv('C:\\Users\\Sandeep Kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\collage_treatment_effect.csv')
egoistic_placeholder <- 2
equitable_placeholder <- 3
altruistic_placeholder <- 4
alt_nr_output <- athey(
data = collage_data,
control_group_placeholder = control_placeholder,
treatment_group_placeholder = altruistic_placeholder,
treatment_variable = "cell",
target_variable = "number_referrals",
covariates = c("satisfied","NPS","lastday_purchase_all","num_purchase_all","money_spend_all","survey"),
covariate_factors = c("satisfied","survey"))
View(leaf_results)
setwd('C:\\Users\\Sandeep kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\git_code\\hte')
source('findit.R')
source('supplementary_functions.R')
library(causalTree)
library(randomForestCI)
library(dplyr)
data <- read.csv('C:\\Users\\Sandeep kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\collage_treatment_effect.csv')
data <- data %>% filter(cell==1 | cell==4) %>%
mutate(cell=ifelse(cell==1,0,1))
control_data <- data %>% filter(cell==0)
treatment_data <- data %>% filter(cell==1)
control_data['split']<- sample(as.numeric(row.names(control_data))%% 3)
treatment_data['split']<- sample(as.numeric(row.names(treatment_data))%% 3)
est_data <- rbind(control_data %>% filter(split == 1), treatment_data %>% filter(split == 1))
train_data <- rbind(control_data %>% filter(split == 0), treatment_data %>% filter(split == 0))
test_data <- rbind(control_data %>% filter(split == 2), treatment_data %>% filter(split == 2))
treatment_var = "cell"
outcome_var = "number_referrals"
cov_cols = colnames(train_data)[!(colnames(train_data) %in% c(outcome_var, treatment_var, 'con_rate', 'split'))]
f = sprintf("%s ~ %s",outcome_var,paste(cov_cols,collapse = ' + '))
tree <- honest.causalTree(as.formula(f),
data = train_data,treatment = train_data[[treatment_var]],
est_data = est_data, est_treatment = est_data[[treatment_var]],
split.Rule = "CT", split.Honest = T, cv.option="CT",
cv.Honest=T, HonestSampleSize = nrow(est_data))
fancyRpartPlot(tree)
tree_cp <- tree$cptable[,1][which.min(tree$cptable[,4])]
pruned_tree <- prune(tree, tree_cp)
source('findit.R')
leaf_results <- get_leaf_results(test_data, pruned_tree, treatment_var, outcome_var)
leaf_results <- get_leaf_results(test_data, pruned_tree, treatment_var, outcome_var)
tree <- honest.causalTree(as.formula(f),
data = train_data,treatment = train_data[[treatment_var]],
est_data = est_data, est_treatment = est_data[[treatment_var]],
split.Rule = "CT", split.Honest = T, cv.option="CT",
cv.Honest=T, HonestSampleSize = nrow(est_data))
fancyRpartPlot(tree)
fancyRpartPlot(tree)
tree_cp <- tree$cptable[,1][which.min(tree$cptable[,4])]
pruned_tree <- prune(tree, tree_cp)
fancyRpartPlot(pruned_tree)
source('findit.R')
leaf_results <- get_leaf_results(test_data, pruned_tree, treatment_var, outcome_var)
a<- 1:30
set.seed(12345)
sample(a,5)
sample(a,5)
a<- 1:30
set.seed(12345)
sample(a,5)
sample(a,5)
library(causalTree)
library(randomForestCI)
library(dplyr)
data <- read.csv('C:\\Users\\Sandeep kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\collage_treatment_effect.csv')
data <- data %>% filter(cell==1 | cell==4) %>%
mutate(cell=ifelse(cell==1,0,1))
control_data <- data %>% filter(cell==0)
treatment_data <- data %>% filter(cell==1)
set.seed(12345)
control_data['split']<- sample(as.numeric(row.names(control_data))%% 3)
treatment_data['split']<- sample(as.numeric(row.names(treatment_data))%% 3)
est_data <- rbind(control_data %>% filter(split == 1), treatment_data %>% filter(split == 1))
train_data <- rbind(control_data %>% filter(split == 0), treatment_data %>% filter(split == 0))
test_data <- rbind(control_data %>% filter(split == 2), treatment_data %>% filter(split == 2))
treatment_var = "cell"
outcome_var = "number_referrals"
cov_cols = colnames(train_data)[!(colnames(train_data) %in% c(outcome_var, treatment_var, 'con_rate', 'split'))]
f = sprintf("%s ~ %s",outcome_var,paste(cov_cols,collapse = ' + '))
tree <- honest.causalTree(as.formula(f),
data = train_data,treatment = train_data[[treatment_var]],
est_data = est_data, est_treatment = est_data[[treatment_var]],
split.Rule = "CT", split.Honest = T, cv.option="CT",
cv.Honest=T, HonestSampleSize = nrow(est_data))
fancyRpartPlot(tree)
tree_cp <- tree$cptable[,1][which.min(tree$cptable[,4])]
pruned_tree <- prune(tree, tree_cp)
fancyRpartPlot(pruned_tree)
source('findit.R')
leaf_results <- get_leaf_results(test_data, pruned_tree, treatment_var, outcome_var)
library(dplyr)
data <- read.csv('C:\\Users\\Sandeep kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\collage_treatment_effect.csv')
data <- data %>% filter(cell==1 | cell==4) %>%
mutate(cell=ifelse(cell==1,0,1))
control_data <- data %>% filter(cell==0)
treatment_data <- data %>% filter(cell==1)
set.seed(12345)
control_data['split']<- sample(as.numeric(row.names(control_data))%% 3)
treatment_data['split']<- sample(as.numeric(row.names(treatment_data))%% 3)
est_data <- rbind(control_data %>% filter(split == 1), treatment_data %>% filter(split == 1))
train_data <- rbind(control_data %>% filter(split == 0), treatment_data %>% filter(split == 0))
test_data <- rbind(control_data %>% filter(split == 2), treatment_data %>% filter(split == 2))
treatment_var = "cell"
outcome_var = "number_referrals"
cov_cols = colnames(train_data)[!(colnames(train_data) %in% c(outcome_var, treatment_var, 'con_rate', 'split'))]
f = sprintf("%s ~ %s",outcome_var,paste(cov_cols,collapse = ' + '))
f
train_data <- rbind(control_data %>% filter(split == 0), treatment_data %>% filter(split == 0))
test_data <- rbind(control_data %>% filter(split == 2), treatment_data %>% filter(split == 2))
treatment_var = "cell"
outcome_var = "number_referrals"
cov_cols = colnames(train_data)[!(colnames(train_data) %in% c(outcome_var, treatment_var, 'con_rate', 'split'))]
f = sprintf("%s ~ %s",outcome_var,paste(cov_cols,collapse = ' + '))
tree <- honest.causalTree(as.formula(f),
data = train_data,treatment = train_data[[treatment_var]],
est_data = est_data, est_treatment = est_data[[treatment_var]],
split.Rule = "CT", split.Honest = T, cv.option="CT",
cv.Honest=T, HonestSampleSize = nrow(est_data))
fancyRpartPlot(tree)
tree_cp <- tree$cptable[,1][which.min(tree$cptable[,4])]
pruned_tree <- prune(tree, tree_cp)
fancyRpartPlot(pruned_tree)
source('findit.R')
library(dplyr)
data <- read.csv('C:\\Users\\Sandeep kumar\\Google Drive\\Ed Research\\Heterogenous treatment effects\\collage_treatment_effect.csv')
data <- data %>% filter(cell==1 | cell==4) %>%
mutate(cell=ifelse(cell==1,0,1))
control_data <- data %>% filter(cell==0)
treatment_data <- data %>% filter(cell==1)
set.seed(123456)
control_data['split']<- sample(as.numeric(row.names(control_data))%% 3)
treatment_data['split']<- sample(as.numeric(row.names(treatment_data))%% 3)
est_data <- rbind(control_data %>% filter(split == 1), treatment_data %>% filter(split == 1))
train_data <- rbind(control_data %>% filter(split == 0), treatment_data %>% filter(split == 0))
test_data <- rbind(control_data %>% filter(split == 2), treatment_data %>% filter(split == 2))
treatment_var = "cell"
outcome_var = "number_referrals"
cov_cols = colnames(train_data)[!(colnames(train_data) %in% c(outcome_var, treatment_var, 'con_rate', 'split'))]
f = sprintf("%s ~ %s",outcome_var,paste(cov_cols,collapse = ' + '))
tree <- honest.causalTree(as.formula(f),
data = train_data,treatment = train_data[[treatment_var]],
est_data = est_data, est_treatment = est_data[[treatment_var]],
split.Rule = "CT", split.Honest = T, cv.option="CT",
cv.Honest=T, HonestSampleSize = nrow(est_data))
fancyRpartPlot(tree)
tree_cp <- tree$cptable[,1][which.min(tree$cptable[,4])]
pruned_tree <- prune(tree, tree_cp)
fancyRpartPlot(pruned_tree)
source('findit.R')
leaf_results <- get_leaf_results(test_data, pruned_tree, treatment_var, outcome_var)
